{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"app",
				"app_banzhuan"
			],
			[
				"co",
				"config_mode"
			],
			[
				"config",
				"config_ns"
			],
			[
				"err",
				"error_msg"
			],
			[
				"fis",
				"first"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "var db = 'telegraf'\n\nvar rp = 'autogen'\n\nvar measurement = 'http_response'\n\nvar groupBy = []\n\nvar whereFilter = lambda: (hour(\"time\") >= 9 AND hour(\"time\") <= 23)\n\nvar name = 'http_response'\n\nvar idVar = name + ':{{.Group}}'\n\nvar message = ''\n\nvar idTag = 'alertID'\n\nvar levelTag = 'level'\n\nvar messageField = 'message'\n\nvar durationField = 'duration'\n\nvar outputDB = 'chronograf'\n\nvar outputRP = 'autogen'\n\nvar outputMeasurement = 'alerts'\n\nvar triggerType = 'threshold'\n\nvar crit = 0.02\n\nvar data = stream\n    |from()\n        .database(db)\n        .retentionPolicy(rp)\n        .measurement(measurement)\n        .groupBy(groupBy)\n        .where(whereFilter)\n    |eval(lambda: \"response_time\")\n        .as('value')\n\nvar trigger = data\n    |alert()\n        .crit(lambda: \"value\" > crit)\n        .stateChangesOnly()\n        .message(message)\n        .id(idVar)\n        .idTag(idTag)\n        .levelTag(levelTag)\n        .messageField(messageField)\n        .durationField(durationField)\n\ntrigger\n    |influxDBOut()\n        .create()\n        .database(outputDB)\n        .retentionPolicy(outputRP)\n        .measurement(outputMeasurement)\n        .tag('alertName', name)\n        .tag('triggerType', triggerType)\n\ntrigger\n    |httpOut('output')",
			"file": "http_response.tick",
			"file_size": 1236,
			"file_write_time": 131544283708947738,
			"settings":
			{
				"buffer_size": 1236,
				"line_ending": "Unix"
			}
		},
		{
			"file": "报警阀值",
			"settings":
			{
				"buffer_size": 84,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "系统负载  load    1? 5? 15?  / n_cpu"
			}
		},
		{
			"contents": "\nvar db = 'telegraf'\n\nvar rp = 'autogen'\n\nvar measurement = 'system'\n\nvar groupBy = ['host']\n\nvar whereFilter = lambda: TRUE\n\nvar name = 'system_load15(cpu_average)'\n\nvar idVar = name + ':{{.Group}}'\n\nvar message = 'name:{{.Name}}\nid:{{.ID}}\ntask_name:{{.TaskName}}\ngroup:{{.Group}}\ntag:{{.Tags}}\nlevel:{{.Level}} \nvalue:{{ index .Fields \"value\" }}\ntime:{{.Time}}'\n\nvar idTag = 'alertID'\n\nvar levelTag = 'level'\n\nvar messageField = 'message'\n\nvar durationField = 'duration'\n\nvar outputDB = 'chronograf'\n\nvar outputRP = 'autogen'\n\nvar outputMeasurement = 'alerts'\n\nvar triggerType = 'threshold'\n\nvar crit = 0.8\n\nvar data = stream\n    |from()\n        .database(db)\n        .retentionPolicy(rp)\n        .measurement(measurement)\n        .groupBy(groupBy)\n        .where(whereFilter)\n    |eval(lambda: \"load15\" / \"n_cpus\")\n        .as('value')\n\nvar trigger = data\n    |alert()\n        .crit(lambda: \"value\" > crit)\n        .stateChangesOnly()\n        .message(message)\n        .id(idVar)\n        .idTag(idTag)\n        .levelTag(levelTag)\n        .messageField(messageField)\n        .durationField(durationField)\n        .post('http://10.1.1.75:4000/alert/influx')\n\ntrigger\n    |influxDBOut()\n        .create()\n        .database(outputDB)\n        .retentionPolicy(outputRP)\n        .measurement(outputMeasurement)\n        .tag('alertName', name)\n        .tag('triggerType', triggerType)\n\ntrigger\n    |httpOut('output')n",
			"file": "sys_load15.tick",
			"file_size": 1413,
			"file_write_time": 131545795222493928,
			"settings":
			{
				"buffer_size": 1414,
				"line_ending": "Unix"
			}
		},
		{
			"file": "'%{TIMESTAMP_ISO8601:timestamp:ts-\"2006-01-02 15:0",
			"settings":
			{
				"buffer_size": 133,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "'%{TIMESTAMP_ISO8601:timestamp:ts-\"2006-01-02 15:0"
			}
		},
		{
			"file": "ExecStart",
			"settings":
			{
				"buffer_size": 961,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "ExecStart=/usr/bin/chronograf --host 0.0.0.0 --por"
			}
		},
		{
			"file": "1. 修复 sem_report 百度的删除推广单元解析不成功bug",
			"settings":
			{
				"buffer_size": 74,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "1. 修复 sem_report 百度的删除推广单元解析不成功bug"
			}
		},
		{
			"file": "SELECT score_type, count(1)  from score_record whe",
			"settings":
			{
				"buffer_size": 124,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "SELECT score_type, count(1)  from score_record whe"
			}
		},
		{
			"file": "nkapacitor define system_load5_per_cpu -type strea",
			"settings":
			{
				"buffer_size": 220,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "nkapacitor define system_load5_per_cpu -type strea"
			}
		},
		{
			"file": "{\"@timestamp\":\"2017-11-15T17:16:00+08:00",
			"settings":
			{
				"buffer_size": 634,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "{\"@timestamp\":\"2017-11-15T17:16:00+08:00"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 148.0,
		"last_filter": "Package Control: install",
		"selected_items":
		[
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 461.0
	},
	"console":
	{
		"height": 226.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"1 + 1",
			"import os",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/flame/study/draft",
		"/home/flame/study/draft/TICKscripts"
	],
	"file_history":
	[
		"/home/flame/study/draft/TICKscripts/sys_load5.tick",
		"/home/flame/work/banzhuan/src/app_banzhuan/tools/db.py",
		"/home/flame/work/banzhuan/src/config/dev.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/tools/__init__.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/deploy_yml.py",
		"/home/flame/work/banzhuan/doc/update_17-11-01/plan.md",
		"/home/flame/work/banzhuan/doc/action.md",
		"/home/flame/work/banzhuan/doc/udpate_17-09-21/plan.md",
		"/home/flame/.config/sublime-text-3/Packages/Pylinter/Pylinter.sublime-settings",
		"/home/flame/work/banzhuan/src/app_banzhuan/models.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/tools/stream.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/views.py",
		"/home/flame/work/banzhuan/docker/docker_run_dev.sh",
		"/home/flame/work/banzhuan/src/app_banzhuan/biz.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/deploy_step.py",
		"/home/flame/Desktop/banzhuan.sublime-project",
		"/home/flame/work/banzhuan/src/config/config_ns",
		"/home/flame/桌面/pycharm.sh",
		"/home/flame/work/banzhuan/src/run.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/templates/project_list.html",
		"/home/flame/work/banzhuan/src/app_banzhuan/templates/deploy_preview.html",
		"/home/flame/work/banzhuan/src/app_banzhuan/templates/deploy_list.html",
		"/home/flame/work/banzhuan/src/config/online.py",
		"/home/flame/work/banzhuan/src/app_banzhuan/work/s2c/doc/host.yml",
		"/home/flame/work/banzhuan/docker/Dockerfile",
		"/home/flame/work/banzhuan/doc/plan.md",
		"/home/flame/work/banzhuan/docker/docker_run.sh",
		"/home/flame/work/banzhuan/docker/docker_build.sh",
		"/home/flame/work/settings/src/biz/admin.py",
		"/home/flame/work/settings/src/app_web/modules.py",
		"/home/flame/work/s2c-spider2/spider2.py3.env/lib/python3.5/site-packages/sqlacodegen/codegen.py",
		"/home/flame/work/s2c-spider2/README.md",
		"/home/flame/work/s2c-spider2/requirements.py3.txt",
		"/home/flame/work/settings/docker/docker_run_dev.sh",
		"/home/flame/work/settings/src/biz/meta.py",
		"/home/flame/work/settings/README.md"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"load5",
			"User.id",
			"log_id",
			"User.id",
			"log",
			"User.id",
			"User",
			"'web'",
			"Fetch origin",
			"Fetch",
			"_deploy_lo",
			"exec_deploy_step",
			"exec_deploy_order",
			"init_env",
			"error command",
			"qiniu",
			"qinniu",
			"cmd error",
			"BASE_DIR",
			"run_web",
			"prj_path",
			"os.mkdir",
			"../../work",
			"/work",
			"work_path",
			"BASE_DIR",
			"DeployContext",
			"/tmp/tail",
			"tail",
			"app",
			"--",
			"os.path",
			"DeployContext",
			"temp",
			"deploy_code",
			"deploy_do",
			"ingnore",
			"<script src=",
			"chart.js",
			"deploy_code",
			"deploy_info",
			"fiter",
			"deploy_code",
			"log",
			"deploy_do",
			"exec_deploy_step",
			"pub_cmd",
			"init_cmd",
			"db_uri",
			"config_mode",
			"db_uri",
			"success_report",
			"deploy_do",
			"load_yml",
			"ssh",
			"hostname 101.231.185.66",
			"git",
			"load error"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "http_response.tick",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1236,
						"regions":
						{
						},
						"selection":
						[
							[
								380,
								380
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "报警阀值",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"auto_name": "系统负载  load    1? 5? 15?  / n_cpu",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "sys_load15.tick",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1414,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								241
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 125.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "'%{TIMESTAMP_ISO8601:timestamp:ts-\"2006-01-02 15:0",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 133,
						"regions":
						{
						},
						"selection":
						[
							[
								133,
								133
							]
						],
						"settings":
						{
							"auto_name": "'%{TIMESTAMP_ISO8601:timestamp:ts-\"2006-01-02 15:0",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ExecStart",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 961,
						"regions":
						{
						},
						"selection":
						[
							[
								351,
								351
							]
						],
						"settings":
						{
							"auto_name": "ExecStart=/usr/bin/chronograf --host 0.0.0.0 --por",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "1. 修复 sem_report 百度的删除推广单元解析不成功bug",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74,
						"regions":
						{
						},
						"selection":
						[
							[
								74,
								74
							]
						],
						"settings":
						{
							"auto_name": "1. 修复 sem_report 百度的删除推广单元解析不成功bug",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "SELECT score_type, count(1)  from score_record whe",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 124,
						"regions":
						{
						},
						"selection":
						[
							[
								124,
								124
							]
						],
						"settings":
						{
							"auto_name": "SELECT score_type, count(1)  from score_record whe",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "nkapacitor define system_load5_per_cpu -type strea",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 220,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								95
							]
						],
						"settings":
						{
							"auto_name": "nkapacitor define system_load5_per_cpu -type strea",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "{\"@timestamp\":\"2017-11-15T17:16:00+08:00",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 634,
						"regions":
						{
						},
						"selection":
						[
							[
								86,
								86
							]
						],
						"settings":
						{
							"auto_name": "{\"@timestamp\":\"2017-11-15T17:16:00+08:00",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "TICKscript.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/welog.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 237.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
